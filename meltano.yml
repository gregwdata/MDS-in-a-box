version: 1
default_environment: dev
environments:
  - name: dev
    env:
      TMP_PATH: /tmp
  - name: staging
    env:
      TMP_PATH: /tmp
  - name: docker
    env:
      MELTANO_PROJECT_ROOT: /workspaces/nba-monte-carlo
      TMP_PATH: /workspaces/nba-monte-carlo/tmp
  - name: prod
    env:
      TMP_PATH: /tmp

plugins:
  extractors:
    - name: tap-spreadsheets-anywhere
      variant: rfainc
      pip_url: git+https://github.com/rfainc/tap-spreadsheets-anywhere.git
      # config:
      #   tables:
      #     - path: file://./data/2015
      #       name: EEO1_cbsa_nac3_2015
      #       pattern: "year15_cbsa_nac3.txt"
      #       start_date: '2010-01-01T00:00:00Z'
      #       key_properties: []
      #       format: csv
      #       delimiter: ;
      #       sample_rate: 1
      #       max_sampling_read: 10000000
      #       #max_records_per_run: 250
      config:
        tables:
          # - path: https://www.eeoc.gov/sites/default/files/migrated_files/eeoc/statistics/employment/jobpat-eeo1/2015/datasets/year15_cbsa_nac3.txt
          #   name: EEO1_cbsa_nac3_2015
          #   search_prefix: year15_cbsa_nac3.txt
          #   pattern: "year15_cbsa_nac3.txt"
          #   start_date: '2010-01-01T00:00:00Z'
          #   key_properties: []
          #   format: csv
          #   delimiter: ;
          #   sample_rate: 1
          #   max_sampling_read: 10000000
          #   #max_records_per_run: 250
          - path: http://www.eeoc.gov/sites/default/files/migrated_files/eeoc/statistics/employment/jobpat-eeo1/2015/datasets/
            name: EEO1_state_nac3_2015
            search_prefix: "year15_state_nac3.txt"
            pattern: "year15_state_nac3.txt"
            start_date: '2010-01-01T00:00:00Z'
            key_properties: []
            format: csv
            delimiter: ;
            sample_rate: 1
            max_sampling_read: 10000000
            #max_records_per_run: 250
  loaders:
    - name: target-parquet
      variant: estrategiahq
      pip_url: git+https://github.com/estrategiahq/target-parquet.git
      config:
        destination_path: $MELTANO_PROJECT_ROOT/data/data_catalog/psa
        file_size: 100
        compression_method: snappy
        streams_in_separate_folder: true
        add_record_metadata: false
        logging_level: DEBUG
    - name: target-jsonl
      variant: andyh1203
      pip_url: target-jsonl
      config:
        output: $MELTANO_PROJECT_ROOT/output
        do_timestamp_file: true
  utilities:
    - name: superset
      variant: apache
      pip_url: apache-superset>=1.5.0 markupsafe==2.0.1 Werkzeug==2.0.3 WTForms==2.3.0 duckdb-engine==0.6.6 jinja2<3.1.0 cryptography==3.4.7
      config:
        ENABLE_PROXY_FIX: true
    - name: dbt-duckdb
      namespace: dbt_ext
      label: dbt duckdb extension
      pip_url: dbt-core~=1.3.1 dbt-duckdb~=1.3.3 git+https://github.com/meltano/dbt-ext.git
      executable: dbt_invoker
      settings:
        - name: project_dir
          value: $MELTANO_PROJECT_ROOT/transform
          label: Projects Directory
        - name: skip_pre_invoke
          env: DBT_EXT_SKIP_PRE_INVOKE
          kind: boolean
          value: true
          description:
            Whether to skip pre-invoke hooks which automatically run dbt clean
            and deps
        - name: type
          env: DBT_EXT_TYPE
          value: duckdb
        - name: profiles_dir
          env: DBT_PROFILES_DIR
          value: $MELTANO_PROJECT_ROOT/transform/profiles/duckdb
          label: Profiles Directory
        - name: project_dir
          value: $MELTANO_PROJECT_ROOT/transform
          label: Projects Directory
        - name: path
          kind: string
          label: Path
          description:
            The path on your local filesystem where you would like the DuckDB
            database file and it's associated write-ahead log to be written.
        - name: schema
          kind: string
          value: main
          label: Schema
          description: Specify the schema to write into.
      commands:
        build:
          args: build
          description: Will run your models, tests, snapshots and seeds in DAG order.
        describe:
          args: describe
          executable: dbt_extension
        initialize:
          args: initialize
          executable: dbt_extension
      config:
        path: $MELTANO_PROJECT_ROOT/data/data_catalog/mdsbox.db
  mappers:
   - name: meltano-map-transformer
     variant: meltano
     pip_url: git+https://github.com/MeltanoLabs/meltano-map-transform.git
     mappings:
     - name: add-timestamps
       # This adds timestamp columns to all of the named streams
       # Debug by running:
       # % meltano run --full-refresh tap-spreadsheets-anywhere add-timestamps target-jsonl
       config:
         stream_maps:
           latest_RAPTOR_by_player:
             _sdc_extracted_at: datetime.datetime.utcnow().isoformat()
           latest_RAPTOR_by_team:
             _sdc_extracted_at: datetime.datetime.utcnow().isoformat()
           nba_elo_latest:
             _sdc_extracted_at: datetime.datetime.utcnow().isoformat()
           nba_schedule_2023:
             _sdc_extracted_at: datetime.datetime.utcnow().isoformat()
           team_ratings:
             _sdc_extracted_at: datetime.datetime.utcnow().isoformat()
           xf_series_to_seed:
             _sdc_extracted_at: datetime.datetime.utcnow().isoformat()
schedules:
  - name: spreadsheets-anywhere-to-duckdb
    interval: "@once"
    extractor: tap-spreadsheets-anywhere
    loader: target-duckdb
    transform: skip
    start_date: 2022-10-01 18:08:45.303947
project_id: 0f7b47e6-7268-4193-9522-1773c1ee9fee
